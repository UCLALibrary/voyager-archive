# Values for voyager-archive.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1

image:
  repository: uclalibrary/voyager-archive
  tag: 1.0.1
  pullPolicy: Always

nameOverride: ""

fullnameOverride: ""

service:
  type: NodePort
  port: 80
  
ingress:
  enabled: "true"
  annotations:
    kubernetes.io/ingress.class: "nginx"
    nginx.ingress.kubernetes.io/proxy-read-timeout: "600"
    nginx.ingress.kubernetes.io/proxy-send-timeout: "600"
    cert-manager.io/cluster-issuer: sectigo-acme-clusterissuer
    kubernetes.io/tls-acme: "true"

  hosts:
    - host: 'va-ucla.library.ucla.edu'
      paths:
        - "/"
  tls:
  - secretName: lbs-tls
    hosts:
      - va-ucla.library.ucla.edu

django:
  env:
    run_env: "test"
    debug: "false"
    allowed_hosts:
      - lbs.library.ucla.edu
    db_backend: "django.db.backends.postgresql_psycopg2"
    db_name: "qdb"
    db_user: "qdb"
    db_host: "p-d-postgres.library.ucla.edu"
    db_port: 5432
    test_db_name: "qdb"
    email_backend: "django.core.mail.backends.smtp.EmailBackend"
    email_smtp_server: "smtp.ucla.edu"
    # UCLA smtp uses no authentication nor TLS
    email_smtp_port: 25
    email_from_address: "akohler@library.ucla.edu"
    email_password: "fake_value"
    
    # app_ip doesn't seem mandatory, but the legacy QDB app uses it
    # This is the IP address / domain name that is passed to the SMTP server as the sender's machine.
    app_ip: "lbs.library.ucla.edu"
    # QDB database server
    qdb_db_server: "obiwan.qdb.ucla.edu"
    qdb_db_database: "qdb"
    qdb_db_user: "mgrlib"

  externalSecrets:
    enabled: "true"
    env:
      # Application database used by django
      db_password: "/systems/testsoftwaredev/lbstest/db_password"
      django_secret_key: "/systems/testsoftwaredev/lbstest/django_secret_key"
      # UCLA QDB database, from which data is pulled for reports
      qdb_db_password: "/systems/testsoftwaredev/lbstest/qdb_db_password"

resources:
  limits:
    cpu: 500m
    memory: 500Mi
  requests:
    cpu: 250m
    memory: 100Mi

nodeSelector: {}

tolerations: []

affinity: {}
